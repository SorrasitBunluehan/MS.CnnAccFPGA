
*** Running vivado
    with args -log design_1_wrapper.vdi -applog -m64 -product Vivado -messageDb vivado.pb -mode batch -source design_1_wrapper.tcl -notrace



****** Vivado v2020.1 (64-bit)
  **** SW Build 2902540 on Wed May 27 19:54:49 MDT 2020
  **** IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

source design_1_wrapper.tcl -notrace
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'd:/Vivado_Project/MS.CnnAccFPGA/Ip_repo'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/Vivado/Vivado/2020.1/data/ip'.
WARNING: [IP_Flow 19-4995] The host OS only allows 260 characters in a normal path. The IP cache path is more than 80 characters. If you experience issues with IP caching, please consider changing the IP cache to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. 
Current IP cache path is D:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.cache/ip 
Command: link_design -top design_1_wrapper -part xc7z010clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z010clg400-1
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_ConvAccelerator_0_0/design_1_ConvAccelerator_0_0.dcp' for cell 'design_1_i/ConvAccelerator_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.dcp' for cell 'design_1_i/axi_dma_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.dcp' for cell 'design_1_i/processing_system7_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0.dcp' for cell 'design_1_i/rst_ps7_0_20M'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_system_ila_0_0/design_1_system_ila_0_0.dcp' for cell 'design_1_i/system_ila_0'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_xbar_1/design_1_xbar_1.dcp' for cell 'design_1_i/axi_mem_intercon/xbar'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_pc_3/design_1_auto_pc_3.dcp' for cell 'design_1_i/axi_mem_intercon/m00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0.dcp' for cell 'design_1_i/axi_mem_intercon/s01_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1.dcp' for cell 'design_1_i/axi_mem_intercon/s02_couplers/auto_us'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_xbar_0/design_1_xbar_0.dcp' for cell 'design_1_i/ps7_0_axi_periph/xbar'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0.dcp' for cell 'design_1_i/ps7_0_axi_periph/m00_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_pc_1/design_1_auto_pc_1.dcp' for cell 'design_1_i/ps7_0_axi_periph/m01_couplers/auto_pc'
INFO: [Project 1-454] Reading design checkpoint 'd:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_pc_2/design_1_auto_pc_2.dcp' for cell 'design_1_i/ps7_0_axi_periph/s00_couplers/auto_pc'
Netlist sorting complete. Time (s): cpu = 00:00:01 ; elapsed = 00:00:00.650 . Memory (MB): peak = 1070.910 ; gain = 0.000
INFO: [Netlist 29-17] Analyzing 2390 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2020.1
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Chipscope 16-324] Core: design_1_i/system_ila_0/U0/ila_lib UUID: e0698dbb-7e4f-5bce-a82c-fc5d3d48baa4 
Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Finished Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_processing_system7_0_0/design_1_processing_system7_0_0.xdc] for cell 'design_1_i/processing_system7_0/inst'
Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc] for cell 'design_1_i/axi_dma_0/U0'
WARNING: [Vivado_Tcl 4-921] Waiver ID 'CDC-1' -to list should not be empty. [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc:52]
WARNING: [Vivado_Tcl 4-921] Waiver ID 'CDC-1' -to list should not be empty. [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc:56]
WARNING: [Vivado_Tcl 4-919] Waiver ID 'CDC-1' -from list should not be empty. [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc:61]
Finished Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0.xdc] for cell 'design_1_i/axi_dma_0/U0'
Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_20M/U0'
Finished Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0_board.xdc] for cell 'design_1_i/rst_ps7_0_20M/U0'
Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0.xdc] for cell 'design_1_i/rst_ps7_0_20M/U0'
Finished Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_rst_ps7_0_20M_0/design_1_rst_ps7_0_20M_0.xdc] for cell 'design_1_i/rst_ps7_0_20M/U0'
Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_system_ila_0_0/bd_0/ip/ip_0/ila_v6_2/constraints/ila_impl.xdc] for cell 'design_1_i/system_ila_0/U0/ila_lib/U0'
Finished Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_system_ila_0_0/bd_0/ip/ip_0/ila_v6_2/constraints/ila_impl.xdc] for cell 'design_1_i/system_ila_0/U0/ila_lib/U0'
Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_system_ila_0_0/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc] for cell 'design_1_i/system_ila_0/U0/ila_lib/U0'
Finished Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_system_ila_0_0/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc] for cell 'design_1_i/system_ila_0/U0/ila_lib/U0'
Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0_clocks.xdc] for cell 'design_1_i/axi_dma_0/U0'
Finished Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_axi_dma_0_0/design_1_axi_dma_0_0_clocks.xdc] for cell 'design_1_i/axi_dma_0/U0'
Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s01_couplers/auto_us/inst'
Finished Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_us_0/design_1_auto_us_0_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s01_couplers/auto_us/inst'
Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s02_couplers/auto_us/inst'
Finished Parsing XDC File [d:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.srcs/sources_1/bd/design_1/ip/design_1_auto_us_1/design_1_auto_us_1_clocks.xdc] for cell 'design_1_i/axi_mem_intercon/s02_couplers/auto_us/inst'
Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Finished Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_cdc/tcl/xpm_cdc_async_rst.tcl] for cell 'design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.g7serrst.gnsckt_wrst.rst_wr_reg2_inst'
Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
Finished Sourcing Tcl File [D:/Vivado/Vivado/2020.1/data/ip/xpm/xpm_fifo/tcl/xpm_fifo_rst.tcl] for cell 'design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst'
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.017 . Memory (MB): peak = 1125.590 ; gain = 0.000
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 1665 instances were transformed.
  CFGLUT5 => CFGLUT5 (SRL16E, SRLC32E): 60 instances
  RAM16X1S => RAM32X1S (RAMS32): 1600 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 4 instances
  RAM32X1D => RAM32X1D (RAMD32(x2)): 1 instance 

24 Infos, 4 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:16 ; elapsed = 00:00:19 . Memory (MB): peak = 1125.590 ; gain = 54.680
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z010'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z010'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 1154.625 ; gain = 29.035

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 229d3c43d

Time (s): cpu = 00:00:09 ; elapsed = 00:00:09 . Memory (MB): peak = 1720.488 ; gain = 565.863

Starting Logic Optimization Task

Phase 1 Generate And Synthesize Debug Cores
INFO: [Chipscope 16-329] Generating Script for core instance : dbg_hub 
INFO: [IP_Flow 19-3806] Processing IP xilinx.com:ip:xsdbm:3.0 for cell dbg_hub_CV.
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.049 . Memory (MB): peak = 1961.508 ; gain = 0.000
Phase 1 Generate And Synthesize Debug Cores | Checksum: 14605cbd2

Time (s): cpu = 00:00:05 ; elapsed = 00:01:03 . Memory (MB): peak = 1961.508 ; gain = 35.156

Phase 2 Retarget
INFO: [Opt 31-138] Pushed 2 inverter(s) to 12 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 2 Retarget | Checksum: 1db2257b8

Time (s): cpu = 00:00:07 ; elapsed = 00:01:05 . Memory (MB): peak = 1961.508 ; gain = 35.156
INFO: [Opt 31-389] Phase Retarget created 287 cells and removed 379 cells
INFO: [Opt 31-1021] In phase Retarget, 87 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Constant propagation
INFO: [Opt 31-138] Pushed 4 inverter(s) to 11 load pin(s).
Phase 3 Constant propagation | Checksum: 19a7ee8cf

Time (s): cpu = 00:00:08 ; elapsed = 00:01:05 . Memory (MB): peak = 1961.508 ; gain = 35.156
INFO: [Opt 31-389] Phase Constant propagation created 385 cells and removed 1213 cells
INFO: [Opt 31-1021] In phase Constant propagation, 71 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 Sweep
Phase 4 Sweep | Checksum: 1dc2094d1

Time (s): cpu = 00:00:10 ; elapsed = 00:01:07 . Memory (MB): peak = 1961.508 ; gain = 35.156
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 1186 cells
INFO: [Opt 31-1021] In phase Sweep, 1033 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 5 BUFG optimization
Phase 5 BUFG optimization | Checksum: 1dc2094d1

Time (s): cpu = 00:00:11 ; elapsed = 00:01:08 . Memory (MB): peak = 1961.508 ; gain = 35.156
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 6 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 6 Shift Register Optimization | Checksum: 1dc2094d1

Time (s): cpu = 00:00:11 ; elapsed = 00:01:08 . Memory (MB): peak = 1961.508 ; gain = 35.156
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 7 Post Processing Netlist
Phase 7 Post Processing Netlist | Checksum: 1dc2094d1

Time (s): cpu = 00:00:11 ; elapsed = 00:01:09 . Memory (MB): peak = 1961.508 ; gain = 35.156
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 90 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |             287  |             379  |                                             87  |
|  Constant propagation         |             385  |            1213  |                                             71  |
|  Sweep                        |               0  |            1186  |                                           1033  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                             90  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.064 . Memory (MB): peak = 1961.508 ; gain = 0.000
Ending Logic Optimization Task | Checksum: 208784a25

Time (s): cpu = 00:00:12 ; elapsed = 00:01:09 . Memory (MB): peak = 1961.508 ; gain = 35.156

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 36 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 5 newly gated: 0 Total Ports: 72
Ending PowerOpt Patch Enables Task | Checksum: 237529ea6

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.239 . Memory (MB): peak = 2173.867 ; gain = 0.000
Ending Power Optimization Task | Checksum: 237529ea6

Time (s): cpu = 00:00:12 ; elapsed = 00:00:06 . Memory (MB): peak = 2173.867 ; gain = 212.359

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 237529ea6

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2173.867 ; gain = 0.000

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.022 . Memory (MB): peak = 2173.867 ; gain = 0.000
Ending Netlist Obfuscation Task | Checksum: 1d27d9225

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.022 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
55 Infos, 4 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:37 ; elapsed = 00:01:27 . Memory (MB): peak = 2173.867 ; gain = 1048.277
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.057 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.runs/impl_1/design_1_wrapper_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:10 ; elapsed = 00:00:06 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
Command: report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file D:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.runs/impl_1/design_1_wrapper_drc_opted.rpt.
report_drc completed successfully
INFO: [Chipscope 16-240] Debug cores have already been implemented
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z010'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z010'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 2173.867 ; gain = 0.000
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 150376443

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.025 . Memory (MB): peak = 2173.867 ; gain = 0.000
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 14f8bd48d

Time (s): cpu = 00:00:06 ; elapsed = 00:00:05 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 14af39845

Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 14af39845

Time (s): cpu = 00:00:14 ; elapsed = 00:00:10 . Memory (MB): peak = 2173.867 ; gain = 0.000
Phase 1 Placer Initialization | Checksum: 14af39845

Time (s): cpu = 00:00:14 ; elapsed = 00:00:11 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 10cbe43b0

Time (s): cpu = 00:00:17 ; elapsed = 00:00:12 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 2.2 Global Placement Core

Phase 2.2.1 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 2197 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-775] End 1 Pass. Optimized 1027 nets or cells. Created 0 new cell, deleted 1027 existing cells and moved 0 existing cell
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for HD net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.016 . Memory (MB): peak = 2173.867 ; gain = 0.000

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |           1027  |                  1027  |           0  |           1  |  00:00:01  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |           1027  |                  1027  |           0  |           3  |  00:00:02  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.2.1 Physical Synthesis In Placer | Checksum: 1049a07fd

Time (s): cpu = 00:00:45 ; elapsed = 00:00:28 . Memory (MB): peak = 2173.867 ; gain = 0.000
Phase 2.2 Global Placement Core | Checksum: 1b3aaface

Time (s): cpu = 00:00:46 ; elapsed = 00:00:29 . Memory (MB): peak = 2173.867 ; gain = 0.000
Phase 2 Global Placement | Checksum: 1b3aaface

Time (s): cpu = 00:00:46 ; elapsed = 00:00:29 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: 1e80a54e7

Time (s): cpu = 00:00:50 ; elapsed = 00:00:31 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: 1ad725238

Time (s): cpu = 00:00:57 ; elapsed = 00:00:35 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 1921ffb11

Time (s): cpu = 00:00:57 ; elapsed = 00:00:35 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 15ee36214

Time (s): cpu = 00:00:57 ; elapsed = 00:00:35 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: 1efef992b

Time (s): cpu = 00:01:05 ; elapsed = 00:00:42 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: 1c7a2173d

Time (s): cpu = 00:01:06 ; elapsed = 00:00:44 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 1a906c683

Time (s): cpu = 00:01:06 ; elapsed = 00:00:44 . Memory (MB): peak = 2173.867 ; gain = 0.000
Phase 3 Detail Placement | Checksum: 1a906c683

Time (s): cpu = 00:01:06 ; elapsed = 00:00:44 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 11ffca04f

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=12.878 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 13abfcf8d

Time (s): cpu = 00:00:02 ; elapsed = 00:00:01 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [Place 46-33] Processed net design_1_i/ConvAccelerator_0/U0/data_buffer_dut/FF_GEN[0].FFX.ddfx/s00_axis_aresetn_0, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/ConvAccelerator_0/U0/main_fsm_dut/E[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/ConvAccelerator_0/U0/main_fsm_dut/c_state_reg[0]_1[0], BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-33] Processed net design_1_i/ConvAccelerator_0/U0/main_fsm_dut/c_state_reg[0]_2, BUFG insertion was skipped due to placement/routing conflicts.
INFO: [Place 46-56] BUFG insertion identified 4 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 4, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 15807e40b

Time (s): cpu = 00:00:03 ; elapsed = 00:00:02 . Memory (MB): peak = 2173.867 ; gain = 0.000
Phase 4.1.1.1 BUFG Insertion | Checksum: 11ffca04f

Time (s): cpu = 00:01:20 ; elapsed = 00:00:53 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [Place 30-746] Post Placement Timing Summary WNS=12.878. For the most accurate timing information please run report_timing.
Phase 4.1.1 Post Placement Optimization | Checksum: 166732735

Time (s): cpu = 00:01:20 ; elapsed = 00:00:54 . Memory (MB): peak = 2173.867 ; gain = 0.000
Phase 4.1 Post Commit Optimization | Checksum: 166732735

Time (s): cpu = 00:01:20 ; elapsed = 00:00:54 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 166732735

Time (s): cpu = 00:01:21 ; elapsed = 00:00:54 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 4.3 Placer Reporting
Phase 4.3 Placer Reporting | Checksum: 166732735

Time (s): cpu = 00:01:21 ; elapsed = 00:00:54 . Memory (MB): peak = 2173.867 ; gain = 0.000

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.018 . Memory (MB): peak = 2173.867 ; gain = 0.000
Phase 4.4 Final Placement Cleanup | Checksum: 168452a10

Time (s): cpu = 00:01:21 ; elapsed = 00:00:54 . Memory (MB): peak = 2173.867 ; gain = 0.000
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 168452a10

Time (s): cpu = 00:01:21 ; elapsed = 00:00:54 . Memory (MB): peak = 2173.867 ; gain = 0.000
Ending Placer Task | Checksum: d793b904

Time (s): cpu = 00:01:21 ; elapsed = 00:00:54 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [Common 17-83] Releasing license: Implementation
94 Infos, 4 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:23 ; elapsed = 00:00:56 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.runs/impl_1/design_1_wrapper_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:11 ; elapsed = 00:00:05 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [runtcl-4] Executing : report_io -file design_1_wrapper_io_placed.rpt
report_io: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.045 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [runtcl-4] Executing : report_utilization -file design_1_wrapper_utilization_placed.rpt -pb design_1_wrapper_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file design_1_wrapper_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.087 . Memory (MB): peak = 2173.867 ; gain = 0.000
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z010'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z010'
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
103 Infos, 4 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:06 ; elapsed = 00:00:02 . Memory (MB): peak = 2173.867 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.runs/impl_1/design_1_wrapper_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:11 ; elapsed = 00:00:06 . Memory (MB): peak = 2173.867 ; gain = 0.000
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z010'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z010'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs
Checksum: PlaceDB: 6782fea4 ConstDB: 0 ShapeSum: 7010ba60 RouteDB: 0

Phase 1 Build RT Design
Phase 1 Build RT Design | Checksum: 8d4bc0c9

Time (s): cpu = 00:00:29 ; elapsed = 00:00:16 . Memory (MB): peak = 2211.590 ; gain = 32.563
Post Restoration Checksum: NetGraph: 819c70b9 NumContArr: baf5010 Constraints: 0 Timing: 0

Phase 2 Router Initialization

Phase 2.1 Create Timer
Phase 2.1 Create Timer | Checksum: 8d4bc0c9

Time (s): cpu = 00:00:29 ; elapsed = 00:00:16 . Memory (MB): peak = 2211.590 ; gain = 32.563

Phase 2.2 Fix Topology Constraints
Phase 2.2 Fix Topology Constraints | Checksum: 8d4bc0c9

Time (s): cpu = 00:00:29 ; elapsed = 00:00:17 . Memory (MB): peak = 2215.695 ; gain = 36.668

Phase 2.3 Pre Route Cleanup
Phase 2.3 Pre Route Cleanup | Checksum: 8d4bc0c9

Time (s): cpu = 00:00:29 ; elapsed = 00:00:17 . Memory (MB): peak = 2215.695 ; gain = 36.668
 Number of Nodes with overlaps = 0

Phase 2.4 Update Timing
Phase 2.4 Update Timing | Checksum: 18d8b1614

Time (s): cpu = 00:00:41 ; elapsed = 00:00:25 . Memory (MB): peak = 2237.848 ; gain = 58.820
INFO: [Route 35-416] Intermediate Timing Summary | WNS=13.608 | TNS=0.000  | WHS=-0.274 | THS=-344.604|


Phase 2.5 Update Timing for Bus Skew

Phase 2.5.1 Update Timing
Phase 2.5.1 Update Timing | Checksum: 140594353

Time (s): cpu = 00:00:51 ; elapsed = 00:00:30 . Memory (MB): peak = 2417.270 ; gain = 238.242
INFO: [Route 35-416] Intermediate Timing Summary | WNS=13.608 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 2.5 Update Timing for Bus Skew | Checksum: 119f17fea

Time (s): cpu = 00:00:51 ; elapsed = 00:00:30 . Memory (MB): peak = 2417.270 ; gain = 238.242
Phase 2 Router Initialization | Checksum: 1ed451288

Time (s): cpu = 00:00:51 ; elapsed = 00:00:31 . Memory (MB): peak = 2417.270 ; gain = 238.242

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 27049
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 27049
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0


Phase 3 Initial Routing
Phase 3 Initial Routing | Checksum: 1aa4a5b47

Time (s): cpu = 00:00:56 ; elapsed = 00:00:34 . Memory (MB): peak = 2417.270 ; gain = 238.242

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 2787
 Number of Nodes with overlaps = 386
 Number of Nodes with overlaps = 45
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=12.773 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: d1efb973

Time (s): cpu = 00:01:21 ; elapsed = 00:00:51 . Memory (MB): peak = 2417.270 ; gain = 238.242

Phase 4.2 Global Iteration 1
 Number of Nodes with overlaps = 7
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 4
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=12.766 | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.2 Global Iteration 1 | Checksum: 28a1a1659

Time (s): cpu = 00:01:28 ; elapsed = 00:00:58 . Memory (MB): peak = 2417.270 ; gain = 238.242
Phase 4 Rip-up And Reroute | Checksum: 28a1a1659

Time (s): cpu = 00:01:28 ; elapsed = 00:00:58 . Memory (MB): peak = 2417.270 ; gain = 238.242

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp
Phase 5.1 Delay CleanUp | Checksum: 28a1a1659

Time (s): cpu = 00:01:29 ; elapsed = 00:00:58 . Memory (MB): peak = 2417.270 ; gain = 238.242

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: 28a1a1659

Time (s): cpu = 00:01:29 ; elapsed = 00:00:58 . Memory (MB): peak = 2417.270 ; gain = 238.242
Phase 5 Delay and Skew Optimization | Checksum: 28a1a1659

Time (s): cpu = 00:01:29 ; elapsed = 00:00:58 . Memory (MB): peak = 2417.270 ; gain = 238.242

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 1cc07c76f

Time (s): cpu = 00:01:31 ; elapsed = 00:01:00 . Memory (MB): peak = 2417.270 ; gain = 238.242
INFO: [Route 35-416] Intermediate Timing Summary | WNS=12.766 | TNS=0.000  | WHS=0.020  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: 290d510be

Time (s): cpu = 00:01:31 ; elapsed = 00:01:00 . Memory (MB): peak = 2417.270 ; gain = 238.242
Phase 6 Post Hold Fix | Checksum: 290d510be

Time (s): cpu = 00:01:32 ; elapsed = 00:01:00 . Memory (MB): peak = 2417.270 ; gain = 238.242

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 17.221 %
  Global Horizontal Routing Utilization  = 20.1337 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 265cdffe6

Time (s): cpu = 00:01:32 ; elapsed = 00:01:00 . Memory (MB): peak = 2417.270 ; gain = 238.242

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 265cdffe6

Time (s): cpu = 00:01:32 ; elapsed = 00:01:00 . Memory (MB): peak = 2417.270 ; gain = 238.242

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 26f73fa70

Time (s): cpu = 00:01:34 ; elapsed = 00:01:03 . Memory (MB): peak = 2417.270 ; gain = 238.242

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=12.766 | TNS=0.000  | WHS=0.020  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 26f73fa70

Time (s): cpu = 00:01:34 ; elapsed = 00:01:03 . Memory (MB): peak = 2417.270 ; gain = 238.242
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:01:34 ; elapsed = 00:01:03 . Memory (MB): peak = 2417.270 ; gain = 238.242

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
119 Infos, 4 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:01:37 ; elapsed = 00:01:05 . Memory (MB): peak = 2417.270 ; gain = 243.402
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing placer database...
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:07 ; elapsed = 00:00:02 . Memory (MB): peak = 2417.270 ; gain = 0.000
INFO: [Common 17-1381] The checkpoint 'D:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.runs/impl_1/design_1_wrapper_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:11 ; elapsed = 00:00:06 . Memory (MB): peak = 2417.270 ; gain = 0.000
INFO: [runtcl-4] Executing : report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
Command: report_drc -file design_1_wrapper_drc_routed.rpt -pb design_1_wrapper_drc_routed.pb -rpx design_1_wrapper_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Coretcl 2-168] The results of DRC are in file D:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.runs/impl_1/design_1_wrapper_drc_routed.rpt.
report_drc completed successfully
INFO: [runtcl-4] Executing : report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
Command: report_methodology -file design_1_wrapper_methodology_drc_routed.rpt -pb design_1_wrapper_methodology_drc_routed.pb -rpx design_1_wrapper_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Coretcl 2-1520] The results of Report Methodology are in file D:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.runs/impl_1/design_1_wrapper_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:17 ; elapsed = 00:00:10 . Memory (MB): peak = 2512.730 ; gain = 95.461
INFO: [runtcl-4] Executing : report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
Command: report_power -file design_1_wrapper_power_routed.rpt -pb design_1_wrapper_power_summary_routed.pb -rpx design_1_wrapper_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
WARNING: [Power 33-332] Found switching activity that implies high-fanout reset nets being asserted for excessive periods of time which may result in inaccurate power analysis.
Resolution: To review and fix problems, please run Power Constraints Advisor in the GUI from Tools > Power Constraints Advisor or run report_power with the -advisory option to generate a text report.
131 Infos, 5 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:12 ; elapsed = 00:00:07 . Memory (MB): peak = 2512.730 ; gain = 0.000
INFO: [runtcl-4] Executing : report_route_status -file design_1_wrapper_route_status.rpt -pb design_1_wrapper_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -file design_1_wrapper_timing_summary_routed.rpt -pb design_1_wrapper_timing_summary_routed.pb -rpx design_1_wrapper_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
WARNING: [Timing 38-436] There are set_bus_skew constraint(s) in this design. Please run report_bus_skew to ensure that bus skew requirements are met.
INFO: [runtcl-4] Executing : report_incremental_reuse -file design_1_wrapper_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file design_1_wrapper_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file design_1_wrapper_bus_skew_routed.rpt -pb design_1_wrapper_bus_skew_routed.pb -rpx design_1_wrapper_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [Memdata 28-167] Found XPM memory block design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst with a P_MEMORY_PRIMITIVE property set to auto. A value of block is required. You will not be able to use the updatemem program to update the bitstream with new data for the design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_XD_FIFO/NON_BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst block.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/axi_dma_0>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
INFO: [Memdata 28-208] The XPM instance: <design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst> is part of IP: <design_1_i/axi_dma_0>. This XPM instance will be excluded from the .mmi because updatemem is prohibited from making changes to an XPM that is part of an IP.
Command: write_bitstream -force design_1_wrapper.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z010'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z010'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/accu_dut/n_state3 input design_1_i/ConvAccelerator_0/U0/accu_dut/n_state3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/accu_dut/n_state3 input design_1_i/ConvAccelerator_0/U0/accu_dut/n_state3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__2 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__2 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__2 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__2 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__0 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__1 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__2 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__2 input design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__2 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__2 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__2 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m3/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m3/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__2 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m4/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__0 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__1 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__2 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__2 input design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPIP-1] Input pipelining: DSP design_1_i/ConvAccelerator_0/U0/main_fsm_dut/minusOp input design_1_i/ConvAccelerator_0/U0/main_fsm_dut/minusOp/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/accu_dut/n_state3 output design_1_i/ConvAccelerator_0/U0/accu_dut/n_state3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output design_1_i/ConvAccelerator_0/U0/alu0_dut/m0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output design_1_i/ConvAccelerator_0/U0/alu0_dut/m1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output design_1_i/ConvAccelerator_0/U0/alu0_dut/m2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3 output design_1_i/ConvAccelerator_0/U0/alu0_dut/m3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__1 output design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0 output design_1_i/ConvAccelerator_0/U0/alu1_dut/m0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__1 output design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1 output design_1_i/ConvAccelerator_0/U0/alu1_dut/m1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__1 output design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2 output design_1_i/ConvAccelerator_0/U0/alu1_dut/m2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__1 output design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3 output design_1_i/ConvAccelerator_0/U0/alu1_dut/m3/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__1 output design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/main_fsm_dut/minusOp output design_1_i/ConvAccelerator_0/U0/main_fsm_dut/minusOp/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/accu_dut/n_state3 multiplier stage design_1_i/ConvAccelerator_0/U0/accu_dut/n_state3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m3__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu0_dut/m4__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m0__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m1__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m2__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m3/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m3__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__0 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__1 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__2 multiplier stage design_1_i/ConvAccelerator_0/U0/alu1_dut/m4__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP design_1_i/ConvAccelerator_0/U0/main_fsm_dut/minusOp multiplier stage design_1_i/ConvAccelerator_0/U0/main_fsm_dut/minusOp/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[0]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[10]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[11]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[12]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[13]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[14]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[15]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[16]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[1]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[2]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[3]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[4]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[5]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[6]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[7]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[8]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m0__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m0r_reg[9]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[0]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[10]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[11]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[12]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[13]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[14]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[15]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[16]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[1]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[2]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[3]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[4]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[5]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[6]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[7]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[8]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m1__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m1r_reg[9]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[0]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[10]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[11]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[12]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[13]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[14]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[15]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[16]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[1]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[2]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[3]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[4]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[5]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[6]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[7]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[8]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[9]). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[0]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[10]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[11]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[12]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[13]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[14]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[15]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[16]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[1]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[2]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[3]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[4]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[5]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[6]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
WARNING: [DRC DPOR-1] Asynchronous load check: DSP design_1_i/ConvAccelerator_0/U0/alu0_dut/m2__1 output is connected to registers with an asynchronous reset (design_1_i/ConvAccelerator_0/U0/alu0_dut/m2r_reg[7]__1). This is preventing the possibility of merging these registers in to the DSP Block since the DSP block registers only possess synchronous reset capability.  It is suggested to recode or change these registers to remove the reset or use a synchronous reset to get the best optimization for performance, power and area.
INFO: [Common 17-14] Message 'DRC DPOR-1' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC RTSTAT-10] No routable loads: 58 net(s) have no routable loads. The problem bus(es) and/or net(s) are design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwhf.whf/overflow, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwhf.whf/overflow, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_B_CHANNEL.cmd_b_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb, design_1_i/axi_mem_intercon/m00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwss.wsts/ram_afull_fb... and (the first 15 of 44 listed).
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_MM2S_FULL.I_MM2S_FULL_WRAPPER/GEN_INCLUDE_MM2S_SF.I_RD_SF/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [DRC REQP-181] writefirst: Synchronous clocking is detected for BRAM (design_1_i/axi_dma_0/U0/I_PRMRY_DATAMOVER/GEN_S2MM_FULL.I_S2MM_FULL_WRAPPER/GEN_ENABLE_INDET_BTT_SF.I_INDET_BTT/I_DATA_FIFO/BLK_MEM.I_SYNC_FIFOGEN_FIFO/xpm_fifo_instance.xpm_fifo_sync_inst/xpm_fifo_base_inst/gen_sdpram.xpm_memory_base_inst/gen_wr_a.gen_word_narrow.mem_reg) in SDP mode with WRITE_FIRST write-mode. This is the preferred mode for best power characteristics, however it may exhibit address collisions if the same address appears on both read and write ports resulting in unknown or corrupted read data. It is suggested to confirm via simulation that an address collision never occurs and if so it is suggested to try and avoid this situation. If address collisions cannot be avoided, the write-mode may be set to READ_FIRST which guarantees that the read data is the prior contents of the memory at the cost of additional power in the design. See the FPGA Memory Resources User Guide for additional information.
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 408 Warnings, 2 Advisories
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./design_1_wrapper.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-120] WebTalk data collection is mandatory when using a WebPACK part without a full Vivado license. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-186] 'D:/Vivado_Project/MS.CnnAccFPGA/Vivado_proj/System_Project1/System_Project1.runs/impl_1/usage_statistics_webtalk.xml' has been successfully sent to Xilinx on Mon Feb  1 18:03:36 2021. For additional details about this file, please refer to the WebTalk help file at D:/Vivado/Vivado/2020.1/doc/webtalk_introduction.html.
INFO: [Common 17-83] Releasing license: Implementation
157 Infos, 242 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:24 ; elapsed = 00:00:24 . Memory (MB): peak = 2801.813 ; gain = 289.082
INFO: [Common 17-206] Exiting Vivado at Mon Feb  1 18:03:36 2021...
